import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { api } from '../../lib/apiClient';
const aspectOptions = [
    { id: 'landscape', label: '16:9 Landscape', description: 'YouTube, Hudl, Team review' },
    { id: 'vertical', label: '9:16 Vertical', description: 'TikTok, IG Reels, Shorts' },
    { id: 'highlight', label: '4:5 Highlight', description: 'Instagram main feed' },
];
export function EditorStage({ fileInfo, highlights, beatMarkers, selectedTrack, onLaunchExport, overlayConfig, onOverlayChange }) {
    return (_jsxs("section", { className: "space-y-6", children: [_jsxs("header", { className: "flex flex-wrap items-start justify-between gap-4", children: [_jsxs("div", { children: [_jsx("h2", { className: "text-xl font-semibold text-white", children: "Preview & Timeline" }), _jsx("p", { className: "text-sm text-slate-400", children: "Review AI-selected cuts, beat-sync transitions, and overlays before exporting your hype video." })] }), _jsx("button", { type: "button", onClick: onLaunchExport, className: "rounded-full border border-indigo-400/40 bg-indigo-500/20 px-4 py-1.5 text-sm font-semibold text-white transition hover:bg-indigo-500/30", children: "Open Export Suite" })] }), _jsxs("div", { className: "grid gap-6 lg:grid-cols-[3fr,2fr]", children: [_jsxs("div", { className: "rounded-3xl border border-white/10 bg-slate-900/60 p-5 backdrop-blur", children: [_jsx("div", { className: "aspect-video w-full overflow-hidden rounded-2xl border border-white/10 bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950", children: fileInfo?.previewUrl ? (_jsx("video", { src: fileInfo.previewUrl, controls: true, className: "h-full w-full object-cover", children: "Your browser does not support the video tag." })) : (_jsxs("div", { className: "flex h-full w-full flex-col items-center justify-center gap-2 text-sm text-slate-400", children: [_jsx("span", { className: "rounded-full border border-slate-800 px-3 py-1 text-xs uppercase tracking-[0.18em]", children: "Preview" }), "Upload & process footage to unlock the interactive preview and beat grid editor."] })) }), selectedTrack && (_jsx("div", { className: "mt-4 rounded-2xl border border-indigo-400/30 bg-indigo-500/10 p-4", children: _jsxs("div", { className: "flex flex-wrap items-center justify-between gap-3", children: [_jsxs("div", { children: [_jsx("p", { className: "text-xs uppercase tracking-[0.16em] text-indigo-200/80", children: "Soundtrack" }), _jsxs("p", { className: "text-sm font-semibold text-white", children: [selectedTrack.title, " / ", selectedTrack.artist] })] }), _jsxs("div", { className: "flex gap-3 text-xs text-indigo-100/80", children: [_jsxs("span", { children: ["BPM ", selectedTrack.bpm] }), _jsxs("span", { children: ["Match ", selectedTrack.matchScore, "%"] }), _jsx("span", { children: selectedTrack.mood })] })] }) })), beatMarkers.length > 0 && (_jsxs("div", { className: "mt-4 rounded-2xl border border-white/10 bg-slate-950/60 p-4", children: [_jsx("p", { className: "text-xs uppercase tracking-[0.16em] text-slate-500", children: "Beat-aligned timeline" }), _jsx("div", { className: "mt-3 flex h-24 gap-1", children: beatMarkers.map((marker, index) => (_jsxs("div", { className: "relative flex-1", children: [_jsx("div", { className: "absolute bottom-0 left-1/2 w-1 -translate-x-1/2 rounded-full bg-gradient-to-t from-indigo-400/20 via-indigo-400 to-white", style: { height: `${30 + marker.intensity * 60}%` } }), highlights[index] && (_jsx("div", { className: "absolute inset-x-0 bottom-0 translate-y-full pt-3 text-center", children: _jsx("span", { className: "inline-flex rounded-full bg-indigo-500/10 px-2 py-0.5 text-[10px] font-semibold uppercase tracking-[0.18em] text-indigo-200", children: highlights[index].action }) }))] }, marker.id))) })] }))] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "rounded-3xl border border-white/10 bg-slate-900/60 p-5 backdrop-blur", children: [_jsx("p", { className: "text-xs uppercase tracking-[0.16em] text-slate-500", children: "Auto-edit queue" }), _jsx("ul", { className: "mt-3 space-y-3", children: highlights.map((highlight, index) => (_jsxs("li", { className: "rounded-2xl border border-white/10 bg-slate-950/60 p-3 text-sm text-slate-300", children: [_jsxs("div", { className: "flex items-center justify-between text-xs uppercase tracking-[0.16em] text-indigo-200/70", children: [_jsx("span", { children: highlight.timestamp }), _jsxs("span", { children: ["Clip ", String(index + 1).padStart(2, '0')] })] }), _jsx("p", { className: "mt-1 text-sm font-medium text-white", children: highlight.descriptor }), _jsxs("div", { className: "mt-2 flex flex-wrap gap-2 text-xs text-slate-400", children: [_jsx(Tag, { label: "Score", value: `${Math.round(highlight.score * 100)}%` }), _jsx(Tag, { label: "Confidence", value: `${Math.round(highlight.confidence * 100)}%` }), _jsx(Tag, { label: "Motion", value: `${Math.round(highlight.motion * 100)}%` }), _jsx(Tag, { label: "Audio peak", value: `${Math.round(highlight.audioPeak * 100)}%` })] })] }, highlight.id))) })] }), _jsxs("div", { className: "rounded-3xl border border-white/10 bg-slate-900/60 p-5 backdrop-blur", children: [_jsx("p", { className: "text-xs uppercase tracking-[0.16em] text-slate-500", children: "Smart reframing" }), _jsx("p", { className: "mt-2 text-sm text-slate-300", children: "Intelligent subject tracking keeps the ball-handler and rim centered. Aspect presets configure safe zones and letterboxing automatically." }), _jsx("div", { className: "mt-4 space-y-3", children: aspectOptions.map((option) => (_jsxs("div", { className: "rounded-2xl border border-white/10 bg-slate-950/60 p-3 text-sm text-slate-200", children: [_jsx("p", { className: "font-semibold text-white", children: option.label }), _jsx("p", { className: "text-xs text-slate-400", children: option.description })] }, option.id))) })] }), _jsxs("div", { className: "rounded-3xl border border-white/10 bg-slate-900/60 p-5 backdrop-blur", children: [_jsx("p", { className: "text-xs uppercase tracking-[0.16em] text-slate-500", children: "Overlay & Branding" }), _jsxs("div", { className: "mt-3 grid gap-3 text-sm md:grid-cols-2", children: [_jsx(LabeledInput, { label: "Player Name", value: overlayConfig?.lowerThird?.name || '', onChange: (v) => onOverlayChange?.({ ...overlayConfig, lowerThird: { ...overlayConfig?.lowerThird, name: v } }) }), _jsx(LabeledInput, { label: "Team", value: overlayConfig?.lowerThird?.team || '', onChange: (v) => onOverlayChange?.({ ...overlayConfig, lowerThird: { ...overlayConfig?.lowerThird, team: v } }) }), _jsx(LabeledInput, { label: "Number", value: overlayConfig?.lowerThird?.number || '', onChange: (v) => onOverlayChange?.({ ...overlayConfig, lowerThird: { ...overlayConfig?.lowerThird, number: v } }) }), _jsx(LabeledInput, { label: "Position", value: overlayConfig?.lowerThird?.position || '', onChange: (v) => onOverlayChange?.({ ...overlayConfig, lowerThird: { ...overlayConfig?.lowerThird, position: v } }) }), _jsx(LabeledInput, { label: "Primary Color", value: overlayConfig?.lowerThird?.color || '', onChange: (v) => onOverlayChange?.({ ...overlayConfig, lowerThird: { ...overlayConfig?.lowerThird, color: v } }) }), _jsx(LabeledInput, { label: "Logo URL", value: overlayConfig?.logo?.url || '', onChange: (v) => onOverlayChange?.({ ...overlayConfig, logo: { ...(overlayConfig?.logo || { x: 0.92, y: 0.08, scale: 0.5 }), url: v } }) }), _jsx(LogoUploader, { onUploaded: (url) => onOverlayChange?.({ ...overlayConfig, logo: { ...(overlayConfig?.logo || { x: 0.92, y: 0.08, scale: 0.5 }), url } }) })] })] })] })] })] }));
}
function Tag({ label, value }) {
    return (_jsxs("span", { className: "rounded-full border border-white/10 bg-slate-950/70 px-3 py-0.5 text-[11px] uppercase tracking-[0.16em] text-slate-300", children: [label, ": ", value] }));
}
function LabeledInput({ label, value, onChange }) {
    return (_jsxs("label", { className: "flex flex-col gap-1", children: [_jsx("span", { className: "text-xs uppercase tracking-[0.16em] text-slate-500", children: label }), _jsx("input", { value: value, onChange: (e) => onChange(e.target.value), className: "rounded-lg border border-white/10 bg-slate-950/60 px-3 py-2 text-sm text-slate-100 outline-none focus:border-indigo-400", placeholder: label })] }));
}
function LogoUploader({ onUploaded }) {
    async function handleFile(file) {
        if (!file)
            return;
        const isValid = (file.type === 'image/png' || file.type === 'image/svg+xml') && file.size <= 1 * 1024 * 1024;
        if (!isValid) {
            alert('Logo must be PNG or SVG and â‰¤ 1MB');
            return;
        }
        try {
            const { uploadUrl, key } = await api.createUploadUrl({ fileName: file.name, size: file.size, type: file.type, scope: 'logos' });
            await new Promise((resolve, reject) => {
                const xhr = new XMLHttpRequest();
                xhr.open('PUT', uploadUrl, true);
                xhr.onload = () => (xhr.status >= 200 && xhr.status < 300 ? resolve() : reject(new Error(String(xhr.status))));
                xhr.onerror = () => reject(new Error('Upload error'));
                xhr.setRequestHeader('content-type', file.type);
                xhr.send(file);
            });
            // If your bucket is public, construct a public URL from key; otherwise keep the key
            const publicBase = import.meta.env?.VITE_PUBLIC_BUCKET_BASE;
            const url = publicBase && key ? `${publicBase}/${key}` : key || '';
            onUploaded(url);
        }
        catch (e) {
            alert(`Logo upload failed: ${e}`);
        }
    }
    return (_jsxs("label", { className: "flex flex-col gap-1", children: [_jsx("span", { className: "text-xs uppercase tracking-[0.16em] text-slate-500", children: "Upload Logo" }), _jsx("input", { type: "file", accept: "image/png,image/svg+xml", onChange: (e) => handleFile(e.target.files?.[0]), className: "rounded-lg border border-white/10 bg-slate-950/60 px-3 py-2 text-sm text-slate-300" })] }));
}
